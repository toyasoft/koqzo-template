type Admin {
  createdAt: ISO8601DateTime!
  id: ID!
  passwordDigest: String
  updatedAt: ISO8601DateTime!
  username: String!
}

type Article {
  boxImage: String
  content: Content!
  contentId: ID!
  contentName: String!
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  imageIds: [String!]
  images: [Image!]
  isPublished: Boolean!
  link: String
  linkLabel: String
  pcImage: String
  position: Int!
  sections: [Section!]
  spImage: String
  subject: String!
  summary: String
  thumbnail: String
  updatedAt: ISO8601DateTime!
}

"""The connection type for Article."""
type ArticleConnection {
  """A list of edges."""
  edges: [ArticleEdge]

  """A list of nodes."""
  nodes: [Article]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type ArticleEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Article
}

input ArticleFilter {
  OR: [ArticleFilter!]
  subjectContains: String
  contentNameEquals: String
}

type Content {
  articles(
    filter: ArticleFilter

    """Returns the first _n_ elements from the list."""
    first: Int
    skip: Int
    orderBy: String

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ArticleConnection!
  articlesCount: Int!
  createdAt: ISO8601DateTime!
  descriptionLabel: String
  fields(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): FieldConnection
  fieldsCount: Int!
  id: ID!
  imageLabel: String
  isExternalLink: Boolean!
  isFreeField: Boolean!
  isNoDescription: Boolean!
  isNoImage: Boolean!
  isNoSummary: Boolean!
  isSortable: Boolean!
  name: String!
  position: Int!
  sortOrder: String
  subjectLabel: String
  summaryLabel: String
  title: String!
  updatedAt: ISO8601DateTime!
  url: String!
  websiteId: ID!
  websiteTitle: String!
}

"""The connection type for Content."""
type ContentConnection {
  """A list of edges."""
  edges: [ContentEdge]

  """A list of nodes."""
  nodes: [Content]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type ContentEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Content
}

input ContentFilter {
  OR: [ContentFilter!]
  websiteIdEquals: String
}

enum ContentOrderBy {
  position_ASC
  position_DESC
}

"""Autogenerated input type of CreateArticleImage"""
input CreateArticleImageInput {
  articleId: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateArticleImage"""
type CreateArticleImagePayload {
  article: Article!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
}

"""Autogenerated input type of CreateArticle"""
input CreateArticleInput {
  subject: String!
  summary: String!
  description: String!
  link: String
  linkLabel: String
  contentId: ID!
  sections: [SectionAttributes!]

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateArticle"""
type CreateArticlePayload {
  article: Article!
  articleEdge: ArticleEdge!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  content: Content!
  errors: [String!]!
}

"""Autogenerated input type of CreateContent"""
input CreateContentInput {
  title: String!
  name: String!
  subjectLabel: String
  sortOrder: String!
  imageLabel: String
  summaryLabel: String
  descriptionLabel: String
  isFreeField: Boolean
  isExternalLink: Boolean
  isNoImage: Boolean
  isNoSummary: Boolean
  isNoDescription: Boolean
  isSortable: Boolean
  websiteId: String!
  url: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateContent"""
type CreateContentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  contentEdge: ContentEdge!
  errors: [String!]!
  website: Website!
}

"""Autogenerated input type of CreateField"""
input CreateFieldInput {
  label: String!
  name: String!
  fieldType: String!
  placeholder: String!
  contentId: String!
  helpertext: String!
  isRequired: Boolean!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateField"""
type CreateFieldPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  content: Content!
  errors: [String!]!
}

"""Autogenerated input type of CreateSectionImage"""
input CreateSectionImageInput {
  sectionId: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateSectionImage"""
type CreateSectionImagePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  section: Section!
}

"""Autogenerated input type of CreateSection"""
input CreateSectionInput {
  item: String
  body: String
  name: String!
  fieldType: String!
  fieldId: String
  label: String
  placeholder: String!
  articleId: ID!
  isMovable: Boolean!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateSection"""
type CreateSectionPayload {
  article: Article!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
}

"""Autogenerated input type of CreateUser"""
input CreateUserInput {
  name: String!
  email: String!
  companyName: String
  telephone: String
  password: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateUser"""
type CreateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  user: User!
  userEdge: UserEdge!
}

"""Autogenerated input type of CreateWebsite"""
input CreateWebsiteInput {
  name: String!
  title: String!
  url: String!
  userId: String!
  password: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateWebsite"""
type CreateWebsitePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  website: Website!
  websiteEdge: WebsiteEdge!
}

"""Autogenerated input type of DeleteArticleImage"""
input DeleteArticleImageInput {
  imageId: ID!
  articleId: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteArticleImage"""
type DeleteArticleImagePayload {
  article: Article

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  deletedArticleImageId: ID!
  errors: [String!]!
}

"""Autogenerated input type of DeleteArticle"""
input DeleteArticleInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteArticle"""
type DeleteArticlePayload {
  article: Article

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  deletedArticleId: ID!
  errors: [String!]!
}

"""Autogenerated input type of DeleteContent"""
input DeleteContentInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteContent"""
type DeleteContentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  content: Content
  deletedContentId: ID!
  errors: [String!]!
}

"""Autogenerated input type of DeleteField"""
input DeleteFieldInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteField"""
type DeleteFieldPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  deletedFieldId: ID!
  errors: [String!]!
  field: Field
}

"""Autogenerated input type of DeleteSectionImage"""
input DeleteSectionImageInput {
  imageId: ID!
  sectionId: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteSectionImage"""
type DeleteSectionImagePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  deletedSectionImageId: ID!
  errors: [String!]!
  section: Section
}

"""Autogenerated input type of DeleteSection"""
input DeleteSectionInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteSection"""
type DeleteSectionPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  deletedSectionId: ID!
  errors: [String!]!
  section: Section
}

"""Autogenerated input type of DeleteUser"""
input DeleteUserInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteUser"""
type DeleteUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  deletedUserId: ID!
  errors: [String!]!
  user: User
}

"""Autogenerated input type of DeleteWebsite"""
input DeleteWebsiteInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteWebsite"""
type DeleteWebsitePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  deletedWebsiteId: ID!
  errors: [String!]!
  website: Website
}

type Field {
  contentId: ID!
  createdAt: ISO8601DateTime!
  fieldType: String!
  helpertext: String
  id: ID!
  isRequired: Boolean!
  label: String!
  name: String!
  placeholder: String!
  position: Int!
  updatedAt: ISO8601DateTime!
}

"""The connection type for Field."""
type FieldConnection {
  """A list of edges."""
  edges: [FieldEdge]

  """A list of nodes."""
  nodes: [Field]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type FieldEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Field
}

input FieldFilter {
  OR: [FieldFilter!]
  contentIdEquals: String
}

enum FieldOrderBy {
  position_ASC
  position_DESC
}

type Image {
  contentType: String
  createdAt: ISO8601DateTime!
  id: ID!
  thumbnail: String!
  updatedAt: ISO8601DateTime!
  url: String!
}

input ImageAttributes {
  id: ID
  url: String
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

type Mutation {
  createArticle(input: CreateArticleInput!): CreateArticlePayload
  createArticleImage(input: CreateArticleImageInput!): CreateArticleImagePayload
  createContent(input: CreateContentInput!): CreateContentPayload
  createField(input: CreateFieldInput!): CreateFieldPayload
  createSection(input: CreateSectionInput!): CreateSectionPayload
  createSectionImage(input: CreateSectionImageInput!): CreateSectionImagePayload
  createUser(input: CreateUserInput!): CreateUserPayload
  createWebsite(input: CreateWebsiteInput!): CreateWebsitePayload
  deleteArticle(input: DeleteArticleInput!): DeleteArticlePayload
  deleteArticleImage(input: DeleteArticleImageInput!): DeleteArticleImagePayload
  deleteContent(input: DeleteContentInput!): DeleteContentPayload
  deleteField(input: DeleteFieldInput!): DeleteFieldPayload
  deleteSection(input: DeleteSectionInput!): DeleteSectionPayload
  deleteSectionImage(input: DeleteSectionImageInput!): DeleteSectionImagePayload
  deleteUser(input: DeleteUserInput!): DeleteUserPayload
  deleteWebsite(input: DeleteWebsiteInput!): DeleteWebsitePayload
  sendContact(input: SendContactInput!): SendContactPayload
  signinAdmin(input: SigninAdminInput!): SigninAdminPayload
  signinUser(input: SigninUserInput!): SigninUserPayload
  signinWebsite(input: SigninWebsiteInput!): SigninWebsitePayload

  """An example field added by the generator"""
  testField: String!
  updateArticle(input: UpdateArticleInput!): UpdateArticlePayload
  updateArticleImage(input: UpdateArticleImageInput!): UpdateArticleImagePayload
  updateArticleImagePosition(input: UpdateArticleImagePositionInput!): UpdateArticleImagePositionPayload
  updateArticlePosition(input: UpdateArticlePositionInput!): UpdateArticlePositionPayload
  updateContent(input: UpdateContentInput!): UpdateContentPayload
  updateContentPosition(input: UpdateContentPositionInput!): UpdateContentPositionPayload
  updateField(input: UpdateFieldInput!): UpdateFieldPayload
  updateFieldPosition(input: UpdateFieldPositionInput!): UpdateFieldPositionPayload
  updateSection(input: UpdateSectionInput!): UpdateSectionPayload
  updateSectionImage(input: UpdateSectionImageInput!): UpdateSectionImagePayload
  updateSectionImagePosition(input: UpdateSectionImagePositionInput!): UpdateSectionImagePositionPayload
  updateSectionPosition(input: UpdateSectionPositionInput!): UpdateSectionPositionPayload
  updateUser(input: UpdateUserInput!): UpdateUserPayload
  updateWebsite(input: UpdateWebsiteInput!): UpdateWebsitePayload
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Query {
  article(id: ID!): Article!
  articleIds: [ID!]!
  articles(
    filter: ArticleFilter

    """Returns the first _n_ elements from the list."""
    first: Int
    skip: Int
    orderBy: String

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ArticleConnection!
  content(id: ID!): Content!
  contentByName(name: String!): Content!
  contents(
    filter: ContentFilter

    """Returns the first _n_ elements from the list."""
    first: Int
    skip: Int
    orderBy: ContentOrderBy = position_ASC

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ContentConnection!
  currentAdmin: Admin!
  currentUserAdmin: User!
  currentWebsite: Website!
  currentWebsiteAdmin: Website!
  fields(
    filter: FieldFilter

    """Returns the first _n_ elements from the list."""
    first: Int
    skip: Int
    orderBy: FieldOrderBy = position_ASC

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the last _n_ elements from the list."""
    last: Int
  ): FieldConnection!
  user(id: ID): User!
  users(
    filter: UserFilter

    """Returns the first _n_ elements from the list."""
    first: Int
    skip: Int
    orderBy: UserOrderBy = created_at_DESC

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the last _n_ elements from the list."""
    last: Int
  ): UserConnection!
  website(id: ID, path: String): Website!
  websites(
    filter: WebsiteFilter

    """Returns the first _n_ elements from the list."""
    first: Int
    skip: Int
    orderBy: WebsiteOrderBy = created_at_DESC

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the last _n_ elements from the list."""
    last: Int
  ): WebsiteConnection!
}

type Section {
  articleId: ID!
  body: String
  createdAt: ISO8601DateTime!
  fieldId: String
  fieldType: String!
  id: ID!
  images: [Image!]
  isMovable: Boolean!
  isPublished: Boolean!
  item: String
  label: String!
  name: String!
  number: Int
  placeholder: String
  position: Int!
  status: Boolean
  updatedAt: ISO8601DateTime!
}

input SectionAttributes {
  id: ID
  item: String
  name: String
  body: String
  label: String!
  placeholder: String
  fieldType: String!
  isMovable: Boolean!
  file: String
  fieldId: String
  images: [ImageAttributes!]
  __typename: String
}

"""Autogenerated input type of SendContact"""
input SendContactInput {
  name: String!
  email: String!
  message: String!
  siteName: String!
  fromEmail: String!
  adminEmail: String!
  siteUrl: String!
  companyName: String!
  telephone: String!
  address: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of SendContact"""
type SendContactPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
}

"""Autogenerated input type of SigninAdmin"""
input SigninAdminInput {
  username: String!
  password: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of SigninAdmin"""
type SigninAdminPayload {
  adminToken: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  currentAdmin: Admin
  errors: [String!]!
}

"""Autogenerated input type of SigninUser"""
input SigninUserInput {
  name: String!
  password: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of SigninUser"""
type SigninUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  user: User
  userToken: String
}

"""Autogenerated input type of SigninWebsite"""
input SigninWebsiteInput {
  name: String!
  password: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of SigninWebsite"""
type SigninWebsitePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  currentWebsite: Website
  errors: [String!]!
  websiteAdminToken: String
}

"""Autogenerated input type of UpdateArticleImage"""
input UpdateArticleImageInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateArticleImage"""
type UpdateArticleImagePayload {
  article: Article!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
}

"""Autogenerated input type of UpdateArticleImagePosition"""
input UpdateArticleImagePositionInput {
  id: ID!
  type: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateArticleImagePosition"""
type UpdateArticleImagePositionPayload {
  article: Article!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
}

"""Autogenerated input type of UpdateArticle"""
input UpdateArticleInput {
  id: ID!
  subject: String
  summary: String
  description: String
  link: String
  linkLabel: String
  isPublished: Boolean
  sections: [SectionAttributes!]

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateArticle"""
type UpdateArticlePayload {
  article: Article!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
}

"""Autogenerated input type of UpdateArticlePosition"""
input UpdateArticlePositionInput {
  id: ID!
  contentId: ID
  type: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateArticlePosition"""
type UpdateArticlePositionPayload {
  article: Article!
  articleEdge: ArticleEdge!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  content: Content!
  errors: [String!]!
}

"""Autogenerated input type of UpdateContent"""
input UpdateContentInput {
  id: ID!
  title: String!
  name: String!
  websiteId: String!
  sortOrder: String!
  subjectLabel: String
  imageLabel: String
  summaryLabel: String
  descriptionLabel: String
  isFreeField: Boolean
  isExternalLink: Boolean
  isNoImage: Boolean
  isNoSummary: Boolean
  isNoDescription: Boolean
  isSortable: Boolean
  url: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateContent"""
type UpdateContentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  content: Content!
  errors: [String!]!
}

"""Autogenerated input type of UpdateContentPosition"""
input UpdateContentPositionInput {
  id: ID!
  type: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateContentPosition"""
type UpdateContentPositionPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  website: Website!
}

"""Autogenerated input type of UpdateField"""
input UpdateFieldInput {
  id: ID!
  name: String
  label: String
  fieldType: String
  placeholder: String
  position: Int
  helpertext: String
  isRequired: Boolean

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateField"""
type UpdateFieldPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  field: Field!
}

"""Autogenerated input type of UpdateFieldPosition"""
input UpdateFieldPositionInput {
  id: ID!
  type: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateFieldPosition"""
type UpdateFieldPositionPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  content: Content!
  errors: [String!]!
}

"""Autogenerated input type of UpdateSectionImage"""
input UpdateSectionImageInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateSectionImage"""
type UpdateSectionImagePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  section: Section!
}

"""Autogenerated input type of UpdateSectionImagePosition"""
input UpdateSectionImagePositionInput {
  id: ID!
  type: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateSectionImagePosition"""
type UpdateSectionImagePositionPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  section: Section!
}

"""Autogenerated input type of UpdateSection"""
input UpdateSectionInput {
  id: ID!
  item: String
  body: String
  isPublished: Boolean

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateSection"""
type UpdateSectionPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  section: Section!
}

"""Autogenerated input type of UpdateSectionPosition"""
input UpdateSectionPositionInput {
  id: ID!
  type: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateSectionPosition"""
type UpdateSectionPositionPayload {
  article: Article!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
}

"""Autogenerated input type of UpdateUser"""
input UpdateUserInput {
  id: ID!
  name: String!
  email: String!
  companyName: String
  telephone: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateUser"""
type UpdateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  user: User!
}

"""Autogenerated input type of UpdateWebsite"""
input UpdateWebsiteInput {
  id: ID!
  title: String!
  name: String!
  url: String!
  userId: String!
  password: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateWebsite"""
type UpdateWebsitePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  website: Website!
}

type User {
  companyName: String
  createdAt: ISO8601DateTime!
  email: String!
  id: ID!
  name: String!
  passwordDigest: String
  telephone: String
  updatedAt: ISO8601DateTime!
  websiteCount: Int!
}

"""The connection type for User."""
type UserConnection {
  """A list of edges."""
  edges: [UserEdge]

  """A list of nodes."""
  nodes: [User]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: User
}

input UserFilter {
  OR: [UserFilter!]
  nameContains: String
  emailContains: String
  telephoneContains: String
  companyNameContains: String
}

enum UserOrderBy {
  created_at_ASC
  created_at_DESC
}

type Website {
  contents(
    filter: ContentFilter

    """Returns the first _n_ elements from the list."""
    first: Int
    skip: Int
    orderBy: ContentOrderBy = position_ASC

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ContentConnection!
  contentsCount: Int!
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  passwordDigest: String
  title: String!
  updatedAt: ISO8601DateTime!
  url: String
  userId: ID!
  userName: String!
  websiteToken: String!
}

"""The connection type for Website."""
type WebsiteConnection {
  """A list of edges."""
  edges: [WebsiteEdge]

  """A list of nodes."""
  nodes: [Website]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type WebsiteEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Website
}

input WebsiteFilter {
  OR: [WebsiteFilter!]
  nameContains: String
  urlContains: String
}

enum WebsiteOrderBy {
  created_at_ASC
  created_at_DESC
}

